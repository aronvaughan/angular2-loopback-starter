#!/usr/bin/env bash

#/ command: mongo:run: "start a mongo container"
#/ usage: rerun mongo:run  --data <>
#/ rerun-variables: RERUN, RERUN_VERSION, RERUN_MODULES, RERUN_MODULE_DIR
#/ option-variables: DATA

. $RERUN_MODULE_DIR/lib/functions.sh run || {
  echo >&2 "Failed loading function library." ; exit 1 ;
}

#set -o errexit -o nounset -o pipefail

rerun_options_parse "$@"

# Command implementation
# ----------------------

# - - -
# Put the command implementation here.
# - - -

#rerun stubbs:add-command --command run --module mongo --description "start a mongo container"
#rerun stubbs:add-option --option data --required true --export false --command run --module mongo --description "where to mount the data volumes"
#docker run -d --name mongo -p 27017:27017 -v /somewhere/onmyhost/mydatabase:/data/db mvertes/alpine-mongo
# docker run -d --name mongo -p 27017:27017 -p 28017:28017 -v mongo-data:/data/db mvertes/alpine-mongo mongod --rest

DIR_EXISTS=`rerun cmdline:dir_exists --dir $DATA`
if [[ ${DIR_EXISTS} -eq 0 ]]; then
   rerun_log info "creating data dir $DATA"
   mkdir -p $DATA
fi
rerun_log info rerun docker:run --name mongo --image $MONGO_IMAGE_NAME --ports "-p 27017:27017 -p 28017:28017" --volumes "-v ${DATA}:/data/db" --cmd "mongod" --options "--rest"
rerun docker:run --name mongo --image $MONGO_IMAGE_NAME --ports "-p 27017:27017 -p 28017:28017" --volumes "-v ${DATA}:/data/db"  --cmd "mongod" --options "--rest"
rerun_log rerun docker:ps --filter name=mongo
rerun docker:ps --filter name=mongo

# Done. Exit with last command exit status.
exit $?

